
* Bugs

* Refactoring
** Make generic Selectors based on gui for arbitrary 4d-Data
    This will seperate gui and data handling for the plot further.
    The goal is to have a method, that is reusable throughout
    raw data, baseline subtracted, bleach and if possible even summed.
** Refactor _init_widgets to be more readable
** Use plotgrid for figure init in widgets
** Init for WidgetFigures
** Rename WidgetFigures to MatplotlibFigures
    When the seperation is done, I can exchange the plotting backend
** Combine the get_trace methods in SfgRecord
** Introduce SfgRecord._rawData and SfgRecord._data
** Apply medfilt globally in SfgRecord
** Add more shapechecker in SfgRecod.base setter
* Improvements

** String importer for base and norm spectra
   I think this will make me Split up the SfgRecord in an importer and the Core class
   I must move SfgRecord._readData, SfgRecord._import_data and SfgRecord._read_metadata
   into the io module
** Bleach and Bleach Trace in gui
   
** Save/load state of gui
** Better labels

** Make data snapable

** More tests for SfgRecord and Widgets

** Metadata viewer

** Transformer from new to old data structure

** Calibration helper

** Merge fitter into the widget

** Plot Toolkit
** List of last opened folders
** Img Viewer
** Dedicated heder import function
** Add a global vis_wl default
   Thes vis_wl default can get overwritten and will then  be used during the import
* Give a presentation about the tool and make it available on a server
